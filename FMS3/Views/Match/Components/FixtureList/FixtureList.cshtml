@model FixtureList

@if (Model.Fixtures.Count() == 0)
{
    <span></span>
}
else
{
    <br />
    @await Component.InvokeAsync("DivisionName", new { divisionId = Model.Fixtures.First().DivisionId.Value })
    <hr />
    <table class="table-bordered" style="width:80%">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Fixtures.FirstOrDefault().HomeTeamId.Value)
                </th>
                <th width="20px"></th>
                <th width="40px"></th>
                <th>
                    @Html.DisplayNameFor(model => model.Fixtures.FirstOrDefault().AwayTeamId.Value)
                </th>
                <th>Attendance</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Fixtures)
            {
                <tr>

                    <td>
                        @Component.InvokeAsync("TeamName", new { teamId = item.HomeTeamId.Value }).Result
                    </td>
                    <td>
                        @if (item.Completed.Value)
                        {
                            @Html.DisplayFor(modelItem => item.HomeTeamScore)
                        }

                    </td>
                    <td>
                        :
                        @if (item.Completed.Value)
                        {
                            @Html.DisplayFor(modelItem => item.AwayTeamScore)
                        }
                    </td>

                    <td>
                        @Component.InvokeAsync("TeamName", new { teamId = item.AwayTeamId }).Result
                    </td>
                    <td>
                        @if (item.Attendance > 0)
                        {
                            @Html.DisplayFor(modelItem => item.Attendance)
                        }
                    </td>
                    <td>
                        @if (item.Completed.Value)
                        {
                            @Html.ActionLink("Details", "MatchDetail", "Match", new { id = item.Id })
                        }
                        else
                        {
                            if (Model.CurrentWeek == item.Week)
                            {
                                @Html.ActionLink("Play", "PlayMatch", "Match", new { id = item.Id })
                            }
                        }
                    </td>
                </tr>
                if (item.Completed.Value)
                {
                    <tr>
                        <td>
                            @Component.InvokeAsync("MatchGoalDisplay", new { matchId = item.Id, teamId = item.HomeTeamId }).Result
                        </td>
                        <td></td>
                        <td></td>
                        <td>
                            @Component.InvokeAsync("MatchGoalDisplay", new { matchId = item.Id, teamId = item.AwayTeamId }).Result
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            @Component.InvokeAsync("MatchCardsDisplay", new { matchId = item.Id, teamId = item.HomeTeamId }).Result
                        </td>
                        <td></td>
                        <td></td>
                        <td>
                            @Component.InvokeAsync("MatchCardsDisplay", new { matchId = item.Id, teamId = item.AwayTeamId }).Result
                        </td>
                        <td></td>
                    </tr>
                }
            }
            <tr>

                <td></td>
                <td></td>
                <td></td>

                <td></td>
                <td>
                    @if (Model.Fixtures.Any(m => m.Completed == false) && Model.CurrentWeek == Model.Fixtures.First().Week)
                    {
                    @Html.ActionLink("Play All", "PlayAllMatches", "Match", new { divisionId = Model.Fixtures.First().DivisionId, seasonId = Model.Fixtures.First().SeasonId, week = Model.Fixtures.First().Week })
                    }
                </td>
            </tr>

        </tbody>
    </table>
}
